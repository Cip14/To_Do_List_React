{"version":3,"sources":["components/EditItemInput.js","components/ToDoItem.js","components/NewItem.js","components/Header.js","components/Footer.js","components/ToDoList.js","App.js","serviceWorker.js","index.js"],"names":["EditItemInput","props","state","itemData","item","handleEdit","bind","event","this","setState","id","text","target","value","completed","className","type","checked","onChange","autoFocus","onKeyUp","keyCode","saveEdit","onClick","React","Component","ToDoItem","editMode","startEdit","handleChange","toDoItem","editItem","deleteButton","deleteItem","editButton","NewItem","buttonVisible","addNew","prevState","newItem","onBlur","Header","title","lsTitle","localStorage","getItem","setItem","style","padding","Footer","ToDoList","JSON","parse","clear","stringify","listData","size","length","newList","map","i","newItemText","push","splice","listElements","key","blankLines","Array","apply","e","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.789d3b5b.chunk.js","sourcesContent":["import React from 'react'\n\nclass EditItemInput extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      itemData: this.props.item\n    }\n    this.handleEdit = this.handleEdit.bind(this);\n  }\n\n  handleEdit(event) {\n    this.setState({\n      itemData: {\n        id: this.props.item.id,\n        text: event.target.value,\n        completed: this.props.item.completed\n      }\n    })\n  }\n\n  render(){\n    return(\n      <div className=\"EditItemDiv\">\n        <input type=\"checkbox\" checked={false} onChange={()=>{}}/>\n        <input className=\"EditItemInput\"\n          autoFocus\n          type=\"text\"\n          value={this.state.itemData.text}\n          onChange={this.handleEdit}\n          onKeyUp={event => {\n            if (event.keyCode === 13) {\n              this.props.saveEdit(this.state.itemData);\n            }\n          }}\n          />\n          <button className=\"SaveItemButton\"\n            onClick={() => {this.props.saveEdit(this.state.itemData)}}>\n            s\n          </button>\n      </div>\n    )\n  }\n}\n\nexport default EditItemInput;\n","import React from 'react'\nimport EditItemInput from './EditItemInput'\n\nclass ToDoItem extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      editMode: false\n    }\n    this.saveEdit = this.saveEdit.bind(this);\n    this.startEdit = this.startEdit.bind(this);\n  }\n\n  startEdit(text) {\n    this.setState({\n      editMode: true,\n      text: text\n    })\n  }\n\n  saveEdit(itemData) {\n    this.setState({\n      editMode: false\n    })\n    this.props.handleChange(itemData)\n  }\n\n  render() {\n    const itemData = {\n      id: this.props.item.id,\n      text: this.props.item.text,\n      completed: !this.props.item.completed\n    };\n\n    const toDoItem =\n    <label\n      className={this.props.item.completed ? 'completedItem' : null}\n      >\n      <input className=\"ToDoItemCheckbox\"\n        type=\"checkbox\"\n        checked={this.props.item.completed}\n        onChange={() => {this.props.handleChange(itemData)}}\n        />\n      {this.props.item.text}\n    </label>\n\n    const editItem = <EditItemInput\n        item={this.props.item}\n        saveEdit={this.saveEdit}\n      />\n\n    const deleteButton =\n    <button className=\"DeleteItemButton\"\n      onClick={() => {this.props.deleteItem(this.props.item)}}>\n      X\n    </button>\n\n    const editButton = !this.state.editMode &&\n    <button className=\"EditItemButton\"\n      onClick={() => {this.startEdit(this.props.item.text)}}>\n      /\n    </button>\n\n\n    return(\n      <div className=\"ToDoItem\">\n        {this.state.editMode ? editItem : toDoItem}\n        {this.props.item.completed ? deleteButton : editButton}\n      </div>\n    )\n  }\n}\n\nexport default ToDoItem;\n","import React from 'react'\n\nclass NewItem extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      text: \"\",\n      buttonVisible: false\n    }\n    this.addNew = this.addNew.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event){\n    this.setState({\n      text: event.target.value,\n      buttonVisible: (event.target.value !== \"\")\n    })\n  }\n\n  addNew(){\n    this.setState(prevState => {\n      return {\n        text: \"\",\n        buttonVisible: false\n      }\n    })\n    this.props.newItem(this.state.text);\n  }\n\n  render() {\n    return(\n      <div className=\"NewItem\">\n        <input type=\"checkbox\" checked={false} onChange={()=>{}}/>\n        <input className=\"NewItemInput\"\n          type=\"text\"\n          value={this.state.text}\n          onChange={this.handleChange}\n          onKeyUp={event => {\n            if (event.keyCode === 13 && event.target.value !== \"\") {\n              this.addNew();\n            }\n          }}\n          onBlur={(() => {\n            if(this.state.text !== \"\"){\n              this.addNew();\n            }\n          })}\n        />\n        {this.state.buttonVisible && <button\n          className=\"NewItemButton\"\n          onClick={this.addNew}>+</button>}\n      </div>\n    )\n  }\n}\n\nexport default NewItem;\n","import React from 'react'\nimport EditItemInput from './EditItemInput'\n\nclass Header extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      title: 'Minha Lista de tarefas',\n      editMode: false\n    }\n    this.startEdit = this.startEdit.bind(this);\n    this.saveEdit = this.saveEdit.bind(this);\n  }\n\n  componentDidMount(){\n    const lsTitle = localStorage.getItem('title');\n    if((lsTitle !== null) && (this.state.title !== lsTitle)){\n      this.setState({\n        title: lsTitle,\n        editMode: false\n      })\n    }\n  }\n\n  startEdit(){\n    this.setState(prevState => {\n      return {\n        title: prevState.title,\n        editMode: true\n      }\n    })\n  }\n\n  saveEdit(itemData){\n    this.setState({\n      title: itemData.text,\n      editMode: false\n    })\n    localStorage.setItem('title', this.state.title)\n  }\n\n  render(){\n\n    return(\n      <header>\n        {this.state.editMode ?\n          <div style={{\n              padding: '4ch 0ch',\n            }}>\n          <EditItemInput\n            item={{text: this.state.title}}\n            saveEdit={this.saveEdit} />\n          </div>\n          :\n          <h2 onClick={this.startEdit}>\n            {this.state.title}\n          </h2>}\n      </header>\n    )\n  }\n}\n\nexport default Header\n","import React from 'react'\n\nfunction Footer() {\n  return(\n    <footer>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport ToDoItem from './ToDoItem'\nimport NewItem from './NewItem'\nimport Header from './Header'\nimport Footer from './Footer'\n\nclass ToDoList extends React.Component{\n  constructor() {\n    super();\n    if (JSON.parse(localStorage.getItem('list')) === null) {\n      localStorage.clear();\n      const ld = [{\n        id: 0,\n        text: 'Escrever minha primeira tarefa',\n        completed: false\n      }];\n      localStorage.setItem('list', JSON.stringify(ld));\n    }\n    this.state = {\n      listData: JSON.parse(localStorage.getItem('list')),\n      size: JSON.parse(localStorage.getItem('list')).length\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.newItem = this.newItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n  }\n\n  handleChange(itemData){\n    const newList = this.state.listData.map((item, i) => {\n      if (item.id === itemData.id) {\n        return{\n          id: i,\n          text: itemData.text,\n          completed: itemData.completed\n        }\n      }else {\n        return{\n          id: i,\n          text: item.text,\n          completed: item.completed\n        }\n      }\n    })\n    this.setState(prevState => {\n      return{\n        listData: newList,\n        size: prevState.size\n      }\n    })\n    localStorage.setItem('list', JSON.stringify(newList));\n  }\n\n  newItem(newItemText) {\n    const itemData = {\n      id: this.state.size,\n      text: newItemText,\n      completed: false\n    }\n    let newList = this.state.listData;\n    newList.push(itemData);\n    this.setState(prevState => {\n      return{\n        listData: newList,\n        size: prevState.size + 1\n      }\n    })\n    localStorage.setItem('list', JSON.stringify(newList));\n  }\n\n  deleteItem(itemData) {\n    let newList = this.state.listData;\n    newList.splice(itemData.id, 1);\n    this.setState(prevState => {\n      return{\n        listData: newList,\n        size: prevState.size - 1\n      }\n    })\n    this.handleChange({\n      id: this.state.size + 10,\n      text: \"\",\n      completed: false\n    });\n  }\n\n  render() {\n    const listElements = this.state.listData.map((item, i) => {\n      return (\n        <div key={'div' + i}>\n        <ToDoItem\n          key={item.id}\n          item={item}\n          handleChange={this.handleChange}\n          deleteItem={this.deleteItem}\n          />\n        <hr/>\n        </div>\n      )\n    })\n\n    const blankLines = Array.apply(null, {length: 11 - this.state.size}).map((e, i) => {\n      return <div key={'div' + i}>\n      <NewItem\n        key={'bl' + i}\n        newItem={this.newItem}\n        />\n      <hr/>\n      </div>\n    });\n\n    return (\n      <div className=\"ToDoList\">\n        <Header />\n        {listElements}\n        {blankLines}\n        <NewItem\n          key={'last'}\n          newItem={this.newItem}\n          />\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default ToDoList;\n","import React from 'react';\nimport './App.css';\nimport ToDoList from './components/ToDoList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ToDoList />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}